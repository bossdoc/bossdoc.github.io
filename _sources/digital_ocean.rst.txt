.. _digital_ocean:

Digital Ocean Configuration
==============================

* Installation Script: ``vast/digital_ocean/boss_script_ubuntu16.sh``
* Apache config: ``vw/digital_ocean/bossv2-apache.conf``
* Matplotlib https://bossbwtw.s3.us-east-2.amazonaws.com/matplotlib-1.4.3.zip
* Basemap https://bossbwtw.s3.us-east-2.amazonaws.com/v1.1.0.zip
* Eccodes https://confluence.ecmwf.int/download/attachments/45757960/eccodes-2.22.1-Source.tar.gz?api=v2

Installation
------------

Give sudo access rights to the script

.. code-block:: bash
    
    chmod +x boss_script_ubuntu16.sh


Note: Use ``boss_script_ubuntu20.sh`` if you are on on Debian/ubuntu 20.04 or later. The only difference is it contains an updated MySQL version.

Run the script. You can explicitly change the bossv2 directory according to the directory you run the script in.

.. code-block:: bash
    
    ./boss_script_ubuntu16.sh



Apache Configuration
--------------------


* If you followed the above steps correctly, you have apache2 installed on your system. 
* Move ``bossv2-apache.conf`` to /etc/apache2/sites-available/

.. code-block:: bash

    mv bossv2-apache.conf /etc/apache2/sites-available/ 

* Enable bossv2 apache
  Note: You will have to update the path inside the apache conf according to your system
  
.. code-block:: bash

    sudo a2ensite bossv2-apache.conf
	sudo ufw allow 800
    
* Restart apache service
    
.. code-block:: bash
  
	sudo systemctl reload apache2
	sudo service apache2 restart

Note: Give Permissions to your directories according to your directory tree structure. It should look something like this.


.. code-block:: bash
  
	.
	├── bossv2
	│   ├── Data
	│   ├── Logs
	│   ├── Virtual_Arrival
	│   ├── django-auth-adfs
	│   ├── manage.py
	│   ├── vast
	│   └── z.py
	├── historical_request_process_lock.py
	├── mail_lock_process.py
	├── raw_request_process_lock.py
	└── weather_script.py


Cron Jobs
---------

* Install Cron

.. code-block:: bash

    sudo apt install cron

* Enable Cron

.. code-block:: bash

	sudo systemctl enable cron

* Edit Crontab

.. code-block:: bash

	crontab -e

Use ``vast/digital_ocean/Cron``. Change paths, username, database, password according to your Configuration requirement

* Run 'pip install -e git+https://github.com/paarthneekhara/django-auth-adfs@cbedadcb500b08e4e37ad7377e97d67b5e72fbb0#egg=django_auth_adfs'

Note: Delete cron config using ``crontab -r``


NFS (Share Volumes)
-------------------
Host IP Address: 10.100.1.host
CLient IP Address: 10.100.2.client

* Host

.. code-block:: bash

    sudo apt install nfs-kernel-server
	

Add this in '/etc/exports':	

.. code-block:: bash
	
	/home/bossbwtw             10.100.2.client(rw,sync,no_root_squash,no_subtree_check)

.. code-block:: bash
	
	exportfs -a
	ufw enable
	ufw allow from 10.100.2.client to any port nfs
	systemctl restart nfs-kernel-server

* Client

.. code-block:: bash

	sudo apt install nfs-common
	mkdir -p /home/bossbwtw
	mount 10.100.1.host:/home/bossbwtw /home/bossbwtw 
	nano /etc/fstab
	
Add this in '/etc/fstab'(For automounting):	
	
.. code-block:: bash

	10.100.1.host:/home/bossbwtw       /home/bossbwtw      nfs auto,nofail,noatime,nolock,intr,tcp,actimeo=1800 0 0


Apache Log rotate
-----------------
* Update '/etc/logrotate.d/apache2':

.. code-block:: bash

	/home/bossbwtw/bossv2/Logs/*.log {
		daily
		dateext
		maxage 30
		missingok
		rotate 14
		compress
		delaycompress
		notifempty
		create 640 root adm
		sharedscripts
		postrotate
					if invoke-rc.d apache2 status > /dev/null 2>&1; then \
						invoke-rc.d apache2 reload > /dev/null 2>&1; \
					fi;
		endscript
		prerotate
			if [ -d /etc/logrotate.d/httpd-prerotate ]; then \
				run-parts /etc/logrotate.d/httpd-prerotate; \
			fi; \
		endscript
	}


