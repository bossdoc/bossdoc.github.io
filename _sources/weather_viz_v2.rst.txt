.. _weather_viz_v2:

Weather Viz V2
==============

* Template Directory: ``vast/templates/weather_vizv2``
* Views Directory: ``vast/views_weather_vizv2/``
* Landing URL: ``vw/visualize_position``
* Landing View: ``vast/views_weather_routing/views_weather_visualization.visualize_position``
* Landing Page Template: ``vast/templates/weather_vizv2/visualize_position.html``

Front End
---------

Scripts:
	* ``plot_vessel.js`` : All vessel related tasks: Plotting vessels on map, handling events on vessel click etc. 
	* ``recommended_route.js`` : Route plotting
	* ``historical_track.js`` : Historical tracks of ships
	* ``geo_fence.js`` : Geo Fence Module.
	* ``hra_points.js`` : Plotting HRA/VRA areas.
	* ``weather_vis.js`` : Weather layers plotting
	* ``draw_on_map.js`` : Line Plotting functions. 


Back End
--------

	Vessel Modal Backend
		.. automodule:: vast.views_weather_vizv2.main_handler
			:members:
	
	Weather Tiles Generator

		* ``generate_tiles.py`` : Tiles generator management command for weather types [wind,wavcomb,pressur,swell]
			Run command:
				python manage.py generate_tiles
			
			Default: Reads all files in the date range (DELETE_PAST_DAYS_BEFORE,MAX_FUTURE_DAYS)

			Arguments:(Optional)

			- -f --file
				python manage.py generate_tiles -f wavcomb_2021-02-27_00.json
			- -d --date (%d-%m-%Y)
				python manage.py generate_tiles -d 27-02-2021

	XYZ Map Tiles

	* Weather Tiles Directory: ``Data/MapTiles``
	* MapBox Tiles Directory: ``Data/MapBox``
	* View Path: ``vast/views_weather_routing/map_tiles.py``

		* ``map_tiles.weathertiles`` : Takes weather_field, date_str and {x} {y} {z} as url params and returns weather heatmap tiles
			Syntax::
				/vw/map_tiles/${date_str}/${weather_field}/{z}/{x}/{y}.jpg

		* ``map_tiles.mapbox`` : Takes {x} {y} {z} as url params and returns transparent tiles
			Syntax::
				/vw/mapbox/{z}/{x}/{y}.png


	